// <auto-generated />
using System;
using LoyaltyProgram.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoyaltyProgram.Api.Migrations
{
    [DbContext(typeof(LoyaltyDbContext))]
    partial class LoyaltyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HistoryReward", b =>
                {
                    b.Property<int>("HistoryRewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistoryRewardId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("RewardId")
                        .HasColumnType("integer");

                    b.HasKey("HistoryRewardId");

                    b.HasIndex("ClientId");

                    b.HasIndex("RewardId");

                    b.ToTable("HistoryRewards");
                });

            modelBuilder.Entity("LoyaltyCard", b =>
                {
                    b.Property<int>("LoyaltyCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LoyaltyCardId"));

                    b.Property<string>("CardNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("clientId")
                        .HasColumnType("integer");

                    b.HasKey("LoyaltyCardId");

                    b.HasIndex("clientId")
                        .IsUnique();

                    b.ToTable("LoyaltyCards");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShopId"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ShopId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RewardId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("PointsNeeded")
                        .HasColumnType("numeric");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("RewardId");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("AwardedPoints")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LoyaltyCardId")
                        .HasColumnType("integer");

                    b.Property<int?>("ShopId")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionType")
                        .HasColumnType("text");

                    b.HasKey("TransactionId");

                    b.HasIndex("LoyaltyCardId");

                    b.HasIndex("ShopId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("HistoryReward", b =>
                {
                    b.HasOne("Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("Reward", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardId");

                    b.Navigation("Client");

                    b.Navigation("Reward");
                });

            modelBuilder.Entity("LoyaltyCard", b =>
                {
                    b.HasOne("Client", null)
                        .WithOne("LoyaltyCard")
                        .HasForeignKey("LoyaltyCard", "clientId");
                });

            modelBuilder.Entity("Transaction", b =>
                {
                    b.HasOne("LoyaltyCard", null)
                        .WithMany("Transactions")
                        .HasForeignKey("LoyaltyCardId");

                    b.HasOne("LoyaltyProgram.Domain.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Client", b =>
                {
                    b.Navigation("LoyaltyCard");
                });

            modelBuilder.Entity("LoyaltyCard", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
