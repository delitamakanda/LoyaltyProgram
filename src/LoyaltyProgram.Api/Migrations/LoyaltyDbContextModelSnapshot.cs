// <auto-generated />
using System;
using LoyaltyProgram.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoyaltyProgram.Api.Migrations
{
    [DbContext(typeof(LoyaltyDbContext))]
    partial class LoyaltyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LoyaltyProgram.Domain.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "address");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "date_created");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "last_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "phone_number");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasAnnotation("Relational:JsonPropertyName", "client");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.HistoryReward", b =>
                {
                    b.Property<int>("HistoryRewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistoryRewardId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "created_date");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<int?>("RewardId")
                        .HasColumnType("integer");

                    b.HasKey("HistoryRewardId");

                    b.HasIndex("ClientId");

                    b.HasIndex("RewardId");

                    b.ToTable("HistoryRewards");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.LoyaltyCard", b =>
                {
                    b.Property<int>("LoyaltyCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LoyaltyCardId"));

                    b.Property<string>("CardNumber")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "card_number");

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "date_created");

                    b.Property<int>("Points")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "points");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "rank");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<int?>("clientId")
                        .HasColumnType("integer");

                    b.HasKey("LoyaltyCardId");

                    b.HasIndex("ClientId");

                    b.HasIndex("clientId")
                        .IsUnique();

                    b.ToTable("LoyaltyCards");

                    b.HasAnnotation("Relational:JsonPropertyName", "loyalty_card");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.RankSystem", b =>
                {
                    b.Property<int>("RankSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RankSystemId"));

                    b.Property<int>("PointsNeeded")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "points_needed");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "rank");

                    b.Property<string>("RankDescription")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "shop_id");

                    b.HasKey("RankSystemId");

                    b.HasIndex("ShopId");

                    b.ToTable("RankSystems");

                    b.HasAnnotation("Relational:JsonPropertyName", "rank_system");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RewardId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "created_date");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<decimal>("PointsNeeded")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "points_needed");

                    b.Property<int>("Stock")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "stock");

                    b.HasKey("RewardId");

                    b.ToTable("Rewards");

                    b.HasAnnotation("Relational:JsonPropertyName", "reward");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShopId"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "address");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("ShopId");

                    b.ToTable("Shops");

                    b.HasAnnotation("Relational:JsonPropertyName", "shop");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "amount");

                    b.Property<int>("AwardedPoints")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "points_awarded");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<DateTime?>("DateExpirationPoints")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "date_expiration_points");

                    b.Property<string>("LoyaltyCardId")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "loyalty_card_id");

                    b.Property<int?>("LoyaltyCardId1")
                        .HasColumnType("integer");

                    b.Property<int?>("LoyaltyCardId2")
                        .HasColumnType("integer");

                    b.Property<int?>("ShopId")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "transaction_type");

                    b.HasKey("TransactionId");

                    b.HasIndex("LoyaltyCardId1");

                    b.HasIndex("LoyaltyCardId2");

                    b.HasIndex("ShopId");

                    b.ToTable("Transactions");

                    b.HasAnnotation("Relational:JsonPropertyName", "transactions");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.HistoryReward", b =>
                {
                    b.HasOne("LoyaltyProgram.Domain.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("LoyaltyProgram.Domain.Reward", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardId");

                    b.Navigation("Client");

                    b.Navigation("Reward");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.LoyaltyCard", b =>
                {
                    b.HasOne("LoyaltyProgram.Domain.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("LoyaltyProgram.Domain.Client", null)
                        .WithOne("LoyaltyCard")
                        .HasForeignKey("LoyaltyProgram.Domain.LoyaltyCard", "clientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.RankSystem", b =>
                {
                    b.HasOne("LoyaltyProgram.Domain.Shop", "Shop")
                        .WithMany("RankSystem")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.Transaction", b =>
                {
                    b.HasOne("LoyaltyProgram.Domain.LoyaltyCard", null)
                        .WithMany("Transactions")
                        .HasForeignKey("LoyaltyCardId1");

                    b.HasOne("LoyaltyProgram.Domain.LoyaltyCard", "LoyaltyCard")
                        .WithMany()
                        .HasForeignKey("LoyaltyCardId2");

                    b.HasOne("LoyaltyProgram.Domain.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");

                    b.Navigation("LoyaltyCard");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.Client", b =>
                {
                    b.Navigation("LoyaltyCard");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.LoyaltyCard", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("LoyaltyProgram.Domain.Shop", b =>
                {
                    b.Navigation("RankSystem");
                });
#pragma warning restore 612, 618
        }
    }
}
